{"version":3,"sources":["webpack:///./src/components/templates/ProjectsListPage.tsx","webpack:///./src/components/PostCard/index.tsx","webpack:///./src/components/blogList/ListDeclimer.tsx","webpack:///./src/components/blogList/index.tsx"],"names":["IndexPage","smartSlug","pageContext","slug","replace","className","title","includePhrase","PostCard","description","domainName","domain","imageFluid","logoFluid","refCurrent","fluid","imgStyle","transition","to","onClick","sessionStorage","setItem","scrollTop","ListDeclimer","category","getSmartSubtitle","BlogList","props","allMarkdownRemark","useStaticQuery","elementRef","useRef","useEffect","xScrollPosition","getItem","undefined","window","innerWidth","current","removeItem","role","style","width","ref","edges","map","node","frontmatter","keywords","includes","key","fields","img","children","logo"],"mappings":"6IAAA,oEAqBeA,UAZoB,SAAC,GAAoB,MAChDC,GAAY,UADoC,EAAlBC,YACNC,YAAZ,eAAkBC,QAAQ,IAAK,MAAO,MAExD,OACE,6BAASC,UAAU,kBACjB,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUC,cAAeN,O,wGC4ChBO,EA7CmB,SAAC,GAS7B,IARJL,EAQI,EARJA,KACAG,EAOI,EAPJA,MACAG,EAMI,EANJA,YAEAC,GAII,EALJC,OAKI,EAJJD,YACAE,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEA,OACE,yBAAKT,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAKU,MAAOF,KAEd,yBAAKR,UAAU,WACb,4BAAKC,IAEP,4BAAKI,KAGT,yBAAKL,UAAU,OACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAKU,MAAOH,EAAYI,SAAU,CAAEC,WAAY,gBAGpD,yBAAKZ,UAAU,sBACb,2BAAII,GACJ,kBAAC,OAAD,CACES,GAAIf,EACJE,UAAU,SACVc,QAAS,WACPC,eAAeC,QAAQ,iBAAkBP,EAAWQ,aAJxD,oBCvCGC,G,UAAgC,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAY9C,OACE,yBAAKnB,UAAU,6BACb,wBAAIA,UAAU,uBAAd,WACA,wBAAIA,UAAU,0BAdlB,WACE,OAAQmB,GACN,IAAK,MAIL,QACE,wHAOsCC,OCqF/BC,IApGmB,SAAAC,GAChC,IAyDQC,EAzDKC,yBAAe,YAyDpBD,kBAGFE,EAAaC,mBASnB,OARAC,qBAAU,WACR,IAAMC,EAAkBb,eAAec,QAAQ,mBAAqB,EAIpE,YAH0BC,WAAfL,GAA4BM,OAAOC,WAAa,MACzDP,EAAWQ,QAAQhB,UAAYW,GAE1Bb,eAAemB,WAAW,oBAChC,CAACT,IAGF,oCACE,0BAAMU,KAAK,OAAOC,MAAO,CAAEC,MAAO,SAChC,yBAAKrC,UAAU,UAAUsC,IAAKb,GAC5B,kBAAC,EAAD,CAAcN,SAAUG,EAAMpB,gBAC7BqB,EAAkBgB,MAAMC,KAAI,YAAc,kBAAXC,EAAW,EAAXA,KAC9B,GAC0B,QAAxBnB,EAAMpB,eACNuC,EAAKC,YAAYC,SAASC,SAAStB,EAAMpB,eAEzC,OACE,kBAAC,EAAD,CACE2C,IAAKJ,SAAF,UAAEA,EAAMC,mBAAR,aAAE,EAAmBpC,OACxBR,KAAM2C,EAAKK,OAAOhD,KAClBG,MAAOwC,EAAKC,YAAYzC,MACxBG,YAAaqC,EAAKC,YAAYtC,YAC9BE,QAAQmC,SAAA,UAAAA,EAAMC,mBAAN,eAAmBpC,SAAU,GACrCD,YAAYoC,SAAA,UAAAA,EAAMC,mBAAN,eAAmBrC,aAAc,GAC7CE,WAAYkC,SAAF,UAAEA,EAAMC,mBAAR,iBAAE,EAAmBK,WAArB,aAAE,EAAwBC,SAAS,GAAGtC,MAChDF,UAAWiC,SAAF,UAAEA,EAAMC,mBAAR,iBAAE,EAAmBO,YAArB,aAAE,EAAyBD,SAAS,GAAGtC,MAChDD,WAAYgB,EAAWQ","file":"component---src-components-templates-projects-list-page-tsx-78eafa09baa0df7a9ebe.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../seo\"\nimport Default from \"../default\"\nimport BlogList from \"../blogList\"\n\ninterface Props {\n  pageContext: { slug: string }\n}\n// const IndexPage: React.FC<Props> = ({ pageContext: { slug } }) => {\nconst IndexPage: React.FC<Props> = ({ pageContext }) => {\n  const smartSlug = pageContext.slug?.replace(\"/\", \"\") || \"all\"\n\n  return (\n    <section className=\"page-container\">\n      <SEO title=\"هزارچیز\" />\n      <Default></Default>\n      <BlogList includePhrase={smartSlug}></BlogList>\n    </section>\n  )\n}\n\nexport default IndexPage\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport \"./PostCard.scss\"\nimport Img, { FluidObject } from \"gatsby-image\"\n\ninterface Props {\n  slug: string\n  title: string\n  description: string\n  domain: string\n  domainName: string\n  imageFluid: FluidObject[]\n  logoFluid: FluidObject[]\n  refCurrent: any\n}\nconst PostCard: React.FC<Props> = ({\n  slug,\n  title,\n  description,\n  domain,\n  domainName,\n  imageFluid,\n  logoFluid,\n  refCurrent,\n}) => {\n  return (\n    <div className=\"h-card\">\n      <div className=\"container\">\n        <div className=\"out-div dark-glass\">\n          <div className=\"profile\">\n            <div className=\"img-box\">\n              <Img fluid={logoFluid} />\n            </div>\n            <div className=\"details\">\n              <h2>{title}</h2>\n            </div>\n            <h3>{domainName}</h3>\n          </div>\n        </div>\n        <div className=\"top\">\n          <div className=\"img-box green-glass\">\n            <Img fluid={imageFluid} imgStyle={{ transition: \"all 0.7s\" }} />\n          </div>\n        </div>\n        <div className=\"bottom green-glass\">\n          <p>{description}</p>\n          <Link\n            to={slug}\n            className=\"button\"\n            onClick={() => {\n              sessionStorage.setItem(\"listPageScroll\", refCurrent.scrollTop)\n            }}\n          >\n            مشاهده بیشتر\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default PostCard\n","import React from \"react\"\nimport \"./ListDeclimer.scss\"\n\ninterface Props {\n  category: string\n}\n\nexport const ListDeclimer: React.FC<Props> = ({ category }) => {\n  function getSmartSubtitle() {\n    switch (category) {\n      case \"all\":\n        return `«هزارچیز» تنها واسطه آشنایی شما با این پروژه هاست و هیچ مسئولیت قانونی\n        در قبال صحت عملکرد آنان ندارد.`\n\n      default:\n        return `«هزارچیز» تنها واسطه آشنایی شما با این پروژه هاست و هیچ مسئولیت قانونی\n        در قبال صحت عملکرد آنان ندارد.`\n    }\n  }\n  return (\n    <div className=\"green-glass bloglist-hint\">\n      <h6 className=\"bloglist-hint-title\">توضیحات</h6>\n      <h6 className=\"bloglist-hint-subtitle\">{getSmartSubtitle()}</h6>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PostCard from \"../PostCard\"\nimport { ListDeclimer } from \"./ListDeclimer\"\ninterface Props {\n  includePhrase: string\n}\nconst BlogList: React.FC<Props> = props => {\n  const data = useStaticQuery(\n    graphql`\n      query BlogList {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___title], order: ASC }\n          filter: {\n            frontmatter: { blog: { eq: true }, keywords: { regex: \"//\" } }\n          }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                description\n                domain\n                domainName\n                keywords\n                img {\n                  children {\n                    ... on ImageSharp {\n                      fluid(maxWidth: 1920) {\n                        base64\n                        aspectRatio\n                        src\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        sizes\n                      }\n                    }\n                  }\n                }\n                logo {\n                  children {\n                    ... on ImageSharp {\n                      fluid(maxWidth: 48) {\n                        base64\n                        aspectRatio\n                        src\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        sizes\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  const { allMarkdownRemark } = data\n  // const { siteUrl } = useSiteMetadata()\n\n  const elementRef = useRef()\n  useEffect(() => {\n    const xScrollPosition = sessionStorage.getItem(\"listPageScroll\") || 0\n    if (typeof elementRef !== undefined && window.innerWidth > 800)\n      elementRef.current.scrollTop = xScrollPosition\n\n    return sessionStorage.removeItem(\"listPageScroll\")\n  }, [elementRef])\n\n  return (\n    <>\n      <main role=\"main\" style={{ width: \"100%\" }}>\n        <div className=\"content\" ref={elementRef}>\n          <ListDeclimer category={props.includePhrase} />\n          {allMarkdownRemark.edges.map(({ node }) => {\n            if (\n              props.includePhrase === \"all\" ||\n              node.frontmatter.keywords.includes(props.includePhrase)\n            )\n              return (\n                <PostCard\n                  key={node?.frontmatter?.domain}\n                  slug={node.fields.slug}\n                  title={node.frontmatter.title}\n                  description={node.frontmatter.description}\n                  domain={node?.frontmatter?.domain || \"\"}\n                  domainName={node?.frontmatter?.domainName || \"\"}\n                  imageFluid={node?.frontmatter?.img?.children[0].fluid}\n                  logoFluid={node?.frontmatter?.logo?.children[0].fluid}\n                  refCurrent={elementRef.current}\n                />\n              )\n          })}\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default BlogList\n"],"sourceRoot":""}