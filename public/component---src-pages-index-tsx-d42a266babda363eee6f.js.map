{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/PostCard/index.tsx","webpack:///./src/components/blogList.tsx"],"names":["IndexPage","props","className","title","includePhrase","PostCard","slug","description","domain","imageFluid","logoFluid","fluid","imgStyle","transition","to","BlogList","allMarkdownRemark","useStaticQuery","role","style","width","edges","map","node","frontmatter","keywords","includes","fields","img","children","logo"],"mappings":"qHAAA,oEAeeA,UAVa,SAAAC,GAC1B,OACE,6BAASC,UAAU,kBACjB,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUC,cAAc,W,wGCyCfC,EAtCmB,SAAC,GAO7B,IANJC,EAMI,EANJA,KACAH,EAKI,EALJA,MACAI,EAII,EAJJA,YACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACAC,EACI,EADJA,UAEA,OACE,yBAAKR,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WAEb,kBAAC,IAAD,CAAKS,MAAOD,KAEd,yBAAKR,UAAU,WACb,4BAAKC,IAEP,4BAAKK,KAGT,yBAAKN,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAKS,MAAOF,EAAYG,SAAU,CAAEC,WAAY,gBAGpD,yBAAKX,UAAU,sBACb,2BAAIK,GACJ,kBAAC,OAAD,CAAMO,GAAIR,EAAMJ,UAAU,UAA1B,oBCkDKa,IAtFmB,SAAAd,GAChC,IAwDQe,EAxDKC,yBAAe,aAwDpBD,kBAGR,OACE,oCACE,0BAAME,KAAK,OAAOC,MAAO,CAAEC,MAAO,SAChC,yBAAKlB,UAAU,WACZc,EAAkBK,MAAMC,KAAI,YAAc,cAAXC,EAAW,EAAXA,KAC9B,GAC0B,QAAxBtB,EAAMG,eACNmB,EAAKC,YAAYC,SAASC,SAASzB,EAAMG,eAEzC,OACE,kBAAC,EAAD,CACEE,KAAMiB,EAAKI,OAAOrB,KAClBH,MAAOoB,EAAKC,YAAYrB,MACxBI,YAAagB,EAAKC,YAAYjB,YAC9BC,QAAQe,SAAA,UAAAA,EAAMC,mBAAN,eAAmBhB,SAAU,GACrCC,WAAYc,SAAF,UAAEA,EAAMC,mBAAR,iBAAE,EAAmBI,WAArB,aAAE,EAAwBC,SAAS,GAAGlB,MAChDD,UAAWa,SAAF,UAAEA,EAAMC,mBAAR,iBAAE,EAAmBM,YAArB,aAAE,EAAyBD,SAAS,GAAGlB","file":"component---src-pages-index-tsx-d42a266babda363eee6f.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport Default from \"../components/default\"\nimport BlogList from \"../components/blogList\"\n\nconst IndexPage: React.FC = props => {\n  return (\n    <section className=\"page-container\">\n      <SEO title=\"هزارچیز\" />\n      <Default></Default>\n      <BlogList includePhrase=\"all\"></BlogList>\n    </section>\n  )\n}\n\nexport default IndexPage\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport \"./PostCard.scss\"\nimport Img, { FluidObject } from \"gatsby-image\"\n\ninterface Props {\n  slug: string\n  title: string\n  description: string\n  domain: string\n  imageFluid: FluidObject[]\n  logoFluid: FluidObject[]\n}\nconst PostCard: React.FC<Props> = ({\n  slug,\n  title,\n  description,\n  domain,\n  imageFluid,\n  logoFluid,\n}) => {\n  return (\n    <div className=\"h-card\">\n      <div className=\"container\">\n        <div className=\"out-div dark-glass\">\n          <div className=\"profile\">\n            <div className=\"img-box\">\n              {/* <img src=\"projects/categories/learning/bitcoind/logo.png\" /> */}\n              <Img fluid={logoFluid} />\n            </div>\n            <div className=\"details\">\n              <h2>{title}</h2>\n            </div>\n            <h3>{domain}</h3>\n          </div>\n        </div>\n        <div className=\"top\">\n          <div className=\"img-box\">\n            <Img fluid={imageFluid} imgStyle={{ transition: \"all 0.7s\" }} />\n          </div>\n        </div>\n        <div className=\"bottom green-glass\">\n          <p>{description}</p>\n          <Link to={slug} className=\"button\">\n            مشاهده بیشتر\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default PostCard\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PostCard from \"./PostCard\"\n\ninterface Props {\n  includePhrase: string\n}\nconst BlogList: React.FC<Props> = props => {\n  const data = useStaticQuery(\n    graphql`\n      query BlogList {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___title], order: DESC }\n          filter: {\n            frontmatter: { blog: { eq: true }, keywords: { regex: \"//\" } }\n          }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                description\n                domain\n                keywords\n                img {\n                  children {\n                    ... on ImageSharp {\n                      fluid(maxWidth: 1920) {\n                        base64\n                        aspectRatio\n                        src\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        sizes\n                      }\n                    }\n                  }\n                }\n                logo {\n                  children {\n                    ... on ImageSharp {\n                      fluid(maxWidth: 48) {\n                        base64\n                        aspectRatio\n                        src\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        sizes\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  const { allMarkdownRemark } = data\n  // const { siteUrl } = useSiteMetadata()\n\n  return (\n    <>\n      <main role=\"main\" style={{ width: \"100%\" }}>\n        <div className=\"content\">\n          {allMarkdownRemark.edges.map(({ node }) => {\n            if (\n              props.includePhrase === \"all\" ||\n              node.frontmatter.keywords.includes(props.includePhrase)\n            )\n              return (\n                <PostCard\n                  slug={node.fields.slug}\n                  title={node.frontmatter.title}\n                  description={node.frontmatter.description}\n                  domain={node?.frontmatter?.domain || \"\"}\n                  imageFluid={node?.frontmatter?.img?.children[0].fluid}\n                  logoFluid={node?.frontmatter?.logo?.children[0].fluid}\n                />\n              )\n          })}\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default BlogList\n"],"sourceRoot":""}